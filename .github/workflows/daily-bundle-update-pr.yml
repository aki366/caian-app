name: Daily Bundle Update PR

on:
  schedule:
    - cron: '0 9 * * *'
  workflow_dispatch:

jobs:
  bundle-update:
    runs-on: ubuntu-latest

    env:
      BACKEND_DIR: 'apps/backend'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.3'

      - name: Set DATE variable
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Update Gemfile.lock
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          if git ls-remote --exit-code --heads origin update-bundle-${DATE}; then
            git fetch origin update-bundle-${DATE}:update-bundle-${DATE}
            git checkout update-bundle-${DATE}
          else
            git checkout -b update-bundle-${DATE}
          fi

          cd ${{ env.BACKEND_DIR }}
          bundle update

          git add Gemfile.lock

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update Gemfile.lock ${DATE}"
            git pull --rebase origin update-bundle-${DATE} || true
            git push origin update-bundle-${DATE}
          fi

      - name: Check if Pull Request already exists
        id: check_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_EXISTS=$(gh pr list --head update-bundle-${DATE} --state open --json number --jq '.[0].number')
          if [ -z "$PR_EXISTS" ]; then
            echo "pr_exists=false" >> $GITHUB_ENV
          else
            echo "pr_exists=true" >> $GITHUB_ENV
          fi

      - name: Create Pull Request
        if: env.pr_exists == 'false'
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: Update Gemfile.lock
          branch: update-bundle-${DATE}
          title: "Update Gemfile.lock on ${DATE}"
          body: "Automated update of Gemfile.lock by GitHub Actions"
